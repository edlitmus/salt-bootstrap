name: Test Linux
on:
  workflow_call:
    inputs:
      distro-slug:
        type: string
        required: true
        description: The Distribution Slug

      display-name:
        type: string
        required: true
        description: The Display Name For The Job

      instances:
        type: string
        required: true
        description: The Instances To Test

      container-slug:
        type: string
        required: true
        description: The Container Slug

      timeout:
        type: number
        required: false
        default: 20


jobs:
  Test:
    name: ${{ matrix.instance }}
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/saltstack/salt-ci-containers/testing:${{ inputs.container-slug }}

    timeout-minutes: ${{ inputs.timeout }}
    strategy:
      max-parallel: 2
      fail-fast: false
      matrix:
        instance: ${{ fromJSON(inputs.instances) }}

    steps:
      - uses: actions/checkout@v4

      - name: Install Python Dependencies with pip breakage
        if: ${{ ( inputs.distro-slug = "debian-11" ) || ( inputs.distro-slug = "debian-12" ) || ( inputs.distro-slug = "debian-13" ) || ( inputs.distro-slug = "ubuntu-2404" ) }}
        run: |
          echo "DGM pip test for distro-slug ${{ inputs.distro-slug }}"
          echo "DGM doing break-system-packages for distro-slug ${{ inputs.distro-slug }}"
          python3 -m pip install --break-system-packages -r tests/requirements.txt
          else
            echo "DGM plain pip for distro-slug ${{ inputs.distro-slug }}"
            python3 -m pip install -r tests/requirements.txt
          fi

      - name: Install Python Dependencies without pip breakage
        if: ${{ ( inputs.distro-slug != "debian-11" ) && ( inputs.distro-slug != "debian-12" ) && ( inputs.distro-slug != "debian-13" ) && ( inputs.distro-slug != "ubuntu-2404" ) }}
        run: |
          echo "DGM pip test for distro-slug ${{ inputs.distro-slug }}"
          echo "DGM plain pip for distro-slug ${{ inputs.distro-slug }}"
          python3 -m pip install -r tests/requirements.txt

      - name: Bootstrap Salt
        run: |
          echo "matrix instance ,${{ matrix.instance }},"
          bt_parms=$(echo "${{ matrix.instance }}" | sed 's/-/ /')
          echo "bt parms ,$bt_parms,"
          sh -x ./bootstrap-salt.sh "$bt_parms"

      - name: Test Bootstrap
        run: |
          pytest --cache-clear -v -s -ra --log-cli-level=debug tests/integration/

      - name: Set Exit Status
        if: always()
        run: |
          mkdir exitstatus
          echo "${{ job.status }}" > exitstatus/${{ github.job }}-${{ matrix.instance }}-${{ inputs.distro-slug }}

      - name: Upload Exit Status
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: exitstatus-${{ github.job }}-${{ matrix.instance }}-${{ inputs.distro-slug }}
          path: exitstatus/
